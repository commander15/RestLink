name: Deploy Docs to RestLink-Docs

on:
  push:
    branches:
      - dev

jobs:
  deploy-docs:
    runs-on: ubuntu-latest

    steps:
      # Checkout the main repository
      - name: Checkout Code
        uses: actions/checkout@v4
        
    - name: Set up Qt6 and dependencies
      run: |
        sudo apt update
        sudo apt install -y qt6-base-dev doxygen

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=RELEASE
        -DRESTLINK_BUILD_DOCS=TRUE
        -S ${{ github.workspace }}

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config RELEASE

      # Push documentation to RestLink-Docs
      - name: Deploy to Docs Repo
        env:
          REPO_TOKEN: ${{ secrets.DOCS_DEPLOY_TOKEN }}
        run: |
          cd ${{ steps.strings.outputs.build-output-dir }}/docs
          git init
          git remote add origin https://github.com/commander15/RestLink-Docs.git
          git add .
          git commit -m "Update documentation [CI]"
          git branch -M main
          git push -f "https://${REPO_TOKEN}@github.com/commander15/RestLink-Docs.git" main
